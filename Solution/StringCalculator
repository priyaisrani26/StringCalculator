package Solution;

import java.util.ArrayList;

public class StringCalculator{
	int count =0;
  public int Add(String numbers) {
	  int sum = 0;
	  if(numbers.matches("//(.*)\n(.*)")) {
		  int delimiterIndex = numbers.lastIndexOf('/') + 1;
		  char delimiter = numbers.charAt(delimiterIndex);
		  //System.out.println(delimiter);
		  numbers = numbers.replace("\n","");
		  numbers = numbers.replace(delimiter, ',');
		  int newLineIndex = delimiterIndex + 1;
		  numbers = numbers.substring(newLineIndex, numbers.length());
	  }
	  String[] numbersArray = numbers.split(",|\n");
	  //System.out.println(numbers);
	  ArrayList<Integer> negativeNumbers  = new ArrayList<>();
	  
	  if(numbers.isEmpty()) {
		  return 0;
	  }
	  if(numbers.length() == 1) {
		  return Integer.parseInt(numbers);
	  }
	  for(String i : numbersArray) {
		  int num = Integer.parseInt(i);
		  if(num < 0) {
			  negativeNumbers.add(num);
		  }
		  else {
			  if(num > 1000) {
				  break;
			  }
			  sum += Integer.parseInt(i);
			  count +=1;
		  }
	  }
	  if(negativeNumbers.size() > 0) {
		  throw new IllegalArgumentException("Negatives not allowed " + negativeNumbers);
	  }
	  return sum;
  }
  
	public int  GetCalledCount() {
		return count;
	}
  
}
	


